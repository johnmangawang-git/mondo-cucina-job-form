var C=Object.defineProperty,S=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable;var w=(e,n,t)=>n in e?C(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,B=(e,n)=>{for(var t in n||(n={}))j.call(n,t)&&w(e,t,n[t]);if(l)for(var t of l(n))V.call(n,t)&&w(e,t,n[t]);return e},b=(e,n)=>S(e,T(n));var p=(e,n,t)=>new Promise((s,i)=>{var c=r=>{try{d(t.next(r))}catch(a){i(a)}},o=r=>{try{d(t.throw(r))}catch(a){i(a)}},d=r=>r.done?s(r.value):Promise.resolve(r.value).then(c,o);d((t=t.apply(e,n)).next())});const A=(e,n)=>n.some(t=>e instanceof t);let E,M;function x(){return E||(E=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function W(){return M||(M=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const g=new WeakMap,m=new WeakMap,P=new WeakMap,f=new WeakMap,I=new WeakMap;function k(e){const n=new Promise((t,s)=>{const i=()=>{e.removeEventListener("success",c),e.removeEventListener("error",o)},c=()=>{t(u(e.result)),i()},o=()=>{s(e.error),i()};e.addEventListener("success",c),e.addEventListener("error",o)});return n.then(t=>{t instanceof IDBCursor&&g.set(t,e)}).catch(()=>{}),I.set(n,e),n}function F(e){if(m.has(e))return;const n=new Promise((t,s)=>{const i=()=>{e.removeEventListener("complete",c),e.removeEventListener("error",o),e.removeEventListener("abort",o)},c=()=>{t(),i()},o=()=>{s(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",c),e.addEventListener("error",o),e.addEventListener("abort",o)});m.set(e,n)}let y={get(e,n,t){if(e instanceof IDBTransaction){if(n==="done")return m.get(e);if(n==="objectStoreNames")return e.objectStoreNames||P.get(e);if(n==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return u(e[n])},set(e,n,t){return e[n]=t,!0},has(e,n){return e instanceof IDBTransaction&&(n==="done"||n==="store")?!0:n in e}};function N(e){y=e(y)}function O(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(n,...t){const s=e.call(h(this),n,...t);return P.set(s,n.sort?n.sort():[n]),u(s)}:W().includes(e)?function(...n){return e.apply(h(this),n),u(g.get(this))}:function(...n){return u(e.apply(h(this),n))}}function K(e){return typeof e=="function"?O(e):(e instanceof IDBTransaction&&F(e),A(e,x())?new Proxy(e,y):e)}function u(e){if(e instanceof IDBRequest)return k(e);if(f.has(e))return f.get(e);const n=K(e);return n!==e&&(f.set(e,n),I.set(n,e)),n}const h=e=>I.get(e);function z(e,n,{blocked:t,upgrade:s,blocking:i,terminated:c}={}){const o=indexedDB.open(e,n),d=u(o);return s&&o.addEventListener("upgradeneeded",r=>{s(u(o.result),r.oldVersion,r.newVersion,u(o.transaction),r)}),t&&o.addEventListener("blocked",r=>t(r.oldVersion,r.newVersion,r)),d.then(r=>{c&&r.addEventListener("close",()=>c()),i&&r.addEventListener("versionchange",a=>i(a.oldVersion,a.newVersion,a))}).catch(()=>{}),d}const R=["get","getKey","getAll","getAllKeys","count"],v=["put","add","delete","clear"],D=new Map;function L(e,n){if(!(e instanceof IDBDatabase&&!(n in e)&&typeof n=="string"))return;if(D.get(n))return D.get(n);const t=n.replace(/FromIndex$/,""),s=n!==t,i=v.includes(t);if(!(t in(s?IDBIndex:IDBObjectStore).prototype)||!(i||R.includes(t)))return;const c=function(o,...d){return p(this,null,function*(){const r=this.transaction(o,i?"readwrite":"readonly");let a=r.store;return s&&(a=a.index(d.shift())),(yield Promise.all([a[t](...d),i&&r.done]))[0]})};return D.set(n,c),c}N(e=>b(B({},e),{get:(n,t,s)=>L(n,t)||e.get(n,t,s),has:(n,t)=>!!L(n,t)||e.has(n,t)}));export{z as o};
